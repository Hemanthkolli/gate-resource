#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

destination=$1

if [ -z "$destination" ]; then
  echo "usage: $0 <path/to/destination>" >&2
  exit 1
fi

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp $TMPDIR/gate-resource-request.XXXXXX)
cat > $payload <&0

# parse parameters
gate=$(jq -r '.source.gate // ""' < $payload)
version=$(jq -r '.version' < $payload)
version_ref=$(jq -r '.version.ref' < $payload)

# extract git configuration and pass it to git resource
git_source=$(cat "$payload" | jq -r .source.git)
git_payload=$(echo '{ "source": '$git_source', "version": '$version' }' | jq -r)

# forward to git-resource to let it fetch the repository
echo "$git_payload" | /opt/git-resource/in $destination

# ref is available, identify the value that passsed the gate
# emit the item that passed gate based on the file changed in the commit fetched
cd $destination
passed_file=$(git diff-tree --no-commit-id --name-only -r "$version_ref" | grep "$gate")
passed_item=$(basename $passed_file)
gate_meta=$(jq -n "[
  { name: \"gate\", value: \"$gate\" },
  { name: \"passed\", value: \"$passed_item\" }
]")

# write two files, passed (item name) and metadata (item file)
echo "$passed_item" > "$destination/passed"
cp "$destination/$gate/$passed_file" "$destination/metadata"

jq -n "{
  version: $version,
  metadata: $gate_meta
}" >&3
