#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source=$1
autoclose_cmd=$(dirname $0)/autoclose.sh

if [ -z "$source" ]; then
  echo "usage: $0 <path/to/source>"
  exit 1
fi

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp $TMPDIR/gate-resource-request.XXXXXX)
cat > $payload <&0

# parse parameters
gate=$(jq -r '.source.gate // ""' < $payload)
gate_repository=$(jq -r '.params.gate_repository // ""' < $payload)
item_file=$(jq -r '.params.item_file // ""' < $payload)
update_autoclose=$(jq -r '.params.update_autoclose // ""' < $payload)
git_config_payload=$(jq -r '.source.git.git_config // []' < $payload)

if [[ -z "$item_file" && -z "$update_autoclose" ]]; then
  echo "invalid payload (missing item_file or update_autoclose):" >&2
  cat $payload >&2
  exit 1
fi

configure_git_global() {
  local git_config_payload="$1"
  eval $(echo "$git_config_payload" | \
    jq -r ".[] | \"git config --global '\\(.name)' '\\(.value)'; \"")
}

commit() {
  local repository="$1"
  local msg="$2"
  git -C $repository add .
  git -C $repository status
  if [ -z "$(git -C $repository status --porcelain)" ]; then 
    echo "nothing to commit - skipping"
  else 
    git -C $repository commit -m "$msg"
  fi
}

cd $source
configure_git_global "${git_config_payload}"

# determine operation to emit as a resulting version
operation="passed"
if [ ! -z "$item_file" ]; then
  # dervice item name, note that item_file may contain wildcards
  item=$(basename $item_file)
  # TODO: this check't work, but we need to revisit our version strategy anyway
  if [[ $item == *.autoclose ]]; then
    operation="updated"
  fi

  # write gate status
  mkdir -p $gate_repository/$gate                 # ensure gate-directory exists
  $(cp $item_file "$gate_repository/$gate/$item") # item_file should be interpolated, so we run it in a subshell

  commit "$gate_repository" "$operation gate"

  # extract git configuration and pass it to git resource
  # note: gate item pushes may be safely rebased
  git_source=$(cat "$payload" | jq -r .source.git)
  git_payload=$(jq -n "{
    source: $git_source,
    params: {
      repository: $(echo $gate_repository | jq -R .),
      rebase: true
    }
  }")

    # forward to git-resource to let it push
  echo "$git_payload" | /opt/git-resource/out $source

else
  operation="passed"
  # todo: autocloses must be in a separate commit each, introduce with version: every support
  $autoclose_cmd "$gate_repository/$gate"
  commit "$gate_repository" "processed autoclose in $gate"

  # extract git configuration and pass it to git resource
  # note: autoclose update cannot be safely rebased and need to be serialized
  # however, we'd need a proper rebase and update loop in here to implement this.
  git_source=$(cat "$payload" | jq -r .source.git)
  git_payload=$(jq -n "{
    source: $git_source,
    params: {
      repository: $(echo $gate_repository | jq -R .)
    }
  }")

  # forward to git-resource to let it push
  echo "$git_payload" | /opt/git-resource/out $source
fi

jq -n "{
  version: {
    gate: \"$gate\",
    \"$operation\": \"$item\"
  }
}" >&3
